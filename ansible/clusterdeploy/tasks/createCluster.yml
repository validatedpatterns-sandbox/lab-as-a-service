# Deploy cluster using ACM
- name: "Create namespace {{ cluster.namespace }}"
  kubernetes.core.k8s:
    name: "{{ cluster.namespace }}"
    api_version: v1
    kind: Namespace
    state: present
  when: user_provided_credentials

- name: Generate the clusterDeployment template
  ansible.builtin.template:
    src: clusterDeployment.yaml.j2
    dest: "{{ deployment_config_dir }}/clusterdeployment.yaml"
    mode: "0644"

- name: Create clusterDeployment resources
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'clusterDeployment.yaml.j2') | from_yaml }}"
  register: cd

- name: Wait for adminKubeconfigSecretRef to be populated
  kubernetes.core.k8s_info:
    api_version: hive.openshift.io/v1
    kind: ClusterDeployment
    namespace: "{{ cluster.namespace | default('hive') }}"
    name: '{{ cluster.name }}'
  register: cd_status
  until:
    - cd_status.resources[0].spec.clusterMetadata.adminKubeconfigSecretRef.name is defined
  retries: 90
  delay: 1

- name: "Wait for Running Pod with label hive.openshift.io/cluster-deployment-name/{{ cluster.name }}"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ cluster.namespace |default('hive') }}"
    label_selectors:
      - 'hive.openshift.io/cluster-deployment-name={{ cluster.name }}'
  register: pod_status
  until:
    - pod_status.resources[0].status.phase == 'Running'
  retries: 60
  delay: 5

- name: Get cluster deployment object to find the kubeconfig secret name
  kubernetes.core.k8s_info:
    api_version: hive.openshift.io/v1
    kind: ClusterDeployment
    name: "{{ cluster.name }}"
    namespace: "{{ cluster.namespace |default('hive') }}"
  register: cluster_deployment

- name: Define the secret name as a fact for later use
  ansible.builtin.set_fact:
    admin_secret_name: "{{ cluster_deployment.resources[0].spec.clusterMetadata.adminKubeconfigSecretRef.name }}"

- name: Get the secret containing the kubeconfig
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: "{{ admin_secret_name }}"
    namespace: "{{ cluster.namespace |default('hive') }}"
  register: admin_secret_info

- name: Decode and save kubeconfig to file
  ansible.builtin.copy:
    content: "{{ admin_secret_info.resources[0].data.kubeconfig | b64decode }}"
    dest: "{{ deployment_config_dir }}/kubeconfig"
    mode: '0600'

- name: Create an import secret using the kubeconfig
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: auto-import-secret
        namespace: "{{ cluster.namespace |default('hive') }}"
      type: Opaque
      data:
        kubeconfig: "{{ lookup('file', '{{ deployment_config_dir }}/kubeconfig') | b64encode }}"
  register: auto_import_secret

- name: Create managecluster resource
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'managedCluster.yaml.j2') | from_yaml }}"

- name: Create klusterletAddOnConfig
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'klusterletAddOnConfig.yaml.j2') | from_yaml }}"
