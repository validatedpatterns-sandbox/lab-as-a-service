# Deploy cluster using ACM
- name: "Create {{ cluster.namespace }} namespace"
  kubernetes.core.k8s:
    name: "{{ cluster.namespace }}"
    api_version: v1
    kind: Namespace
    state: present
    
- name: "Create install-config template"
  ansible.builtin.template:
    src: install-config.yaml.j2
    dest: "{{ cluster.name }}-install-config.yaml"

- name: Create install-config secrets
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ cluster.name }}-install-config"
        namespace: "{{ cluster.namespace }}"
      data:
        install-config.yaml: "{{ lookup('file', './{{ cluster.name }}-install-config.yaml') | b64encode }}"

- name: Create pull secret
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ cluster.name }}-pull-secret"
        namespace: "{{ cluster.namespace }}"
      type: kubernetes.io/dockerconfigjson
      data:
        .dockerconfigjson: "{{ cluster.pullSecret }}"
- name: Create AWS credentials secret
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'aws-credentials.yaml.j2') | from_yaml }}"

- name: Create clusterDeployment resources
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'clusterDeployment.yaml.j2') | from_yaml }}"

#- name: Create machinePool resources
#  kubernetes.core.k8s:
#    state: present
#    definition: "{{ lookup('template', 'machinepool.yaml.j2') | from_yaml }}"
#
#- name: Create klusterAddOns manifest
#  kubernetes.core.k8s:
#    state: present
#    definition: "{{ lookup('template', 'klusterletAddOnConfig.yaml.j2') | from_yaml }}"
