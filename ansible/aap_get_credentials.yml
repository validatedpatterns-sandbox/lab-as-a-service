
# TODO:
#  Find a better way to detect the hostname from the route - currently name of application is required

- name: Get AAP API route
  kubernetes.core.k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    namespace: "{{ aap_namespace }}"
    label_selectors:
      - "app.kubernetes.io/name={{ aap_app_name }}"
  register: aap_route

- name: Fail if AAP route not found
  ansible.builtin.fail:
    msg: "AAP route not found. Make sure AAP is properly installed."
  when: aap_route.resources | length == 0

- name: Set aap hostname
  ansible.builtin.set_fact:
    aap_hostname: "{{ aap_route.resources[0].spec.host }}"

# - name: Get AAP Controller API route
#  kubernetes.core.k8s_info:
#    api_version: route.openshift.io/v1
#    kind: Route
#    namespace: "{{ aap_namespace }}"
#    label_selectors:
#      - "app.kubernetes.io/component=automationcontroller"
#  register: automation_controller_route

# - name: Fail if AAP Controller route not found
#   ansible.builtin.fail:
#     msg: "AAP Controller route not found. Make sure AAP is properly installed."
#   when: automation_controller_route.resources | length == 0

# - name: Set automation controller hostname
#   ansible.builtin.set_fact:
#     automation_controller_hostname: "{{ automation_controller_route.resources[0].spec.host }}"

- name: Get AAP Secret Key from OCP secret
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    namespace: "{{ aap_namespace }}"
    label_selectors:
      - "app.kubernetes.io/component=aap"
  register: aap_secret

- name: Set AAP Admin Password
  ansible.builtin.set_fact:
    aap_password: "{{ aap_secret.resources[0].data.password | b64decode }}"
  when: aap_secret.resources | length > 0

#- name: Get AAP Controller Secret Key from secret
#  kubernetes.core.k8s_info:
#    api_version: v1
#    kind: Secret
#    namespace: "{{ aap_namespace }}"
#    label_selectors:
#      - "app.kubernetes.io/component=automationcontroller"
#  register: aap_controller_secret

# - name: Set controller admin password
#   ansible.builtin.set_fact:
#     automation_controller_password: "{{ aap_controller_secret.resources[0].data.password | b64decode }}"
#   when: aap_controller_secret.resources | length > 0

- name: Debug AAP admin password and controller URL
  ansible.builtin.debug:
    msg:
      - "AAP URL: https://{{ aap_hostname | default('failed') }}"
      - "AAP Admin Password: {{ aap_password | default('failed') }}"
      # - "Controller URL: https://{{ automation_controller_hostname | default('failed') }}"
      # - "Controller Secret Key: {{ automation_controller_password | default('failed') }}"
