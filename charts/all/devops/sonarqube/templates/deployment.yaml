apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels: 
    app: {{ .Values.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      securityContext:
        fsGroup: 999
      containers:
        - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          name: {{ .Values.name }}     
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SONAR_ES_BOOTSTRAP_CHECKS_DISABLE
              value: {{ .Values.env.sonar_bootstrap_check }}
          ports:
            - containerPort: {{ .Values.container_port}}
              protocol: TCP
          securityContext:
            runAsUser: 1000  # Ensure SonarQube does NOT run as root
            runAsNonRoot: true
            allowPrivilegeEscalation: false
          livenessProbe:
            httpGet:
              path: /api/system/status
              port: 9000
            initialDelaySeconds: 80
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /api/system/status
              port: 9000
            initialDelaySeconds: 40
            periodSeconds: 10
          resources:
            requests:
              cpu:  {{ .Values.resources.cpu_request }}
              memory: {{ .Values.resources.memory_request }}
            limits:
              cpu: {{ .Values.resources.cpu_limit }}
              memory: {{ .Values.resources.memory_limit }}
          volumeMounts:
            - name: {{ .Values.volumeMount.name }}
              mountPath: {{ .Values.volumeMount.path }}
      serviceAccount: {{ .Values.serviceAccount.name }}
      volumes:
        - name: {{ .Values.volumeMount.name }}
          persistentVolumeClaim: 
            claimName: {{ .Values.name }}
